#The data source properties starting with spring.datasource.* will automatically be read by Spring boot JPA. 
#To change the Hibernate properties we will use prefix spring.jpa.properties.* with Hibernate property name. 
#On the basis of given data source URL, Spring boot can automatically identify data source driver class. 
#So we need not to configure diver class. 


## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

# The database connection URL
spring.datasource.url =jdbc:mysql://localhost:3306/nepdroid_hrm
spring.datasource.username =root
spring.datasource.password =admin123
spring.datasource.hikari.maximum-pool-size=20

#spring.datasource.tomcat.max-wait=20000
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.max-idle=20
#spring.datasource.tomcat.min-idle=15


## Hibernate Properties 
# Define the database platform. The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect

#spring.jpa.properties.hibernate.id.new_generator_mappings = false
#spring.jpa.properties.hibernate.format_sql = true

## To make column names as specified in @Column 
#It is Hibernate 5 implicit naming strategy fully qualified name.
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
#It is Hibernate 5 physical naming strategy fully qualified name.
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Define the naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy



## Hibernate ddl auto (create, create-drop, validate, update)
#It is DDL mode used for embedded database. Default value is create-drop.
spring.jpa.hibernate.ddl-auto = update
#It is used to initialize schema on startup. By default the value is false.
spring.jpa.generate-ddl=true
#It enables logging of SQL statements. Default value is false. 
spring.jpa.show-sql=true 

## Hibernate logging
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB










